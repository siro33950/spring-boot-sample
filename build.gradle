buildscript {
    ext {
        springBootVersion = '2.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-json:${springBootVersion}")
    implementation("mysql:mysql-connector-java:8.0.18")
    implementation("org.jetbrains:annotations:18.0.0")
    implementation("org.codehaus.janino:janino:3.1.0")
    implementation("com.fasterxml.jackson.core:jackson-core:2.10.1")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.10.1")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.1")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.10.1")
    implementation('javax.xml.bind:jaxb-api:2.3.0')
    implementation('com.sun.xml.bind:jaxb-core:2.3.0')
    implementation('com.sun.xml.bind:jaxb-impl:2.3.0')
    compileOnly('org.projectlombok:lombok:1.18.10')
    annotationProcessor('org.projectlombok:lombok:1.18.10')

    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testImplementation("com.ninja-squad:DbSetup:2.1.0")
    testImplementation("org.assertj:assertj-db:1.2.0")
    testImplementation("org.mockito:mockito-core:2.22.0")
}

springBoot {
    mainClassName = "com.example.demo.Application"
}

bootJar {
    archiveBaseName = "spring-boot-sample"
    archiveVersion = "0.0.1-SNAPSHOT"
}

sourceCompatibility = 11
targetCompatibility = 11

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

test {
    jvmArgs = [
            "-Dfile.encoding=UTF-8",
            "-Duser.timezone=UTC",
            "-Dspring.profiles.active=test"
    ]
}

bootRun {
    jvmArgs = [
            "-Dfile.encoding=UTF-8",
            "-Duser.timezone=UTC"
    ]
}
